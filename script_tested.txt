print symbols;
//select databases;
//update nexus_opdb;
//check database nexus_opdb;

create databases;
create database nexus_opdb;
create nexus_opdb;
create databases where id = nexus_opdb;
create databases order by id asc;
create databases where id = nexus_opdb order by id asc;
create databases order by id asc;
create databases order by name asc;
create databases where id != nexus_opdb;
create databases where id in (nexus_analyticaldb, proxima_analyticaldb);
create databases where name in ('a', 'c');
create databases where id in (nexus_analyticaldb, proxima_analyticaldb) order by id asc;
create databases where id not in (nexus_opdb, nexus_analyticaldb);
create databases where id not in (nexus_opdb, nexus_analyticaldb) order by name descending;
create databases where id not in (nexus_opdb, nexus_analyticaldb) order by name asc;
create databases where name = 'e';
create databases where name != 'e';
create databases where name like 'Nexus%';
create databases where name like 'Nexus%' order by id;
create databases where name like 'Nexus%' order by id descending;
create databases where name like 'Nexus%' order by id asc;
create databases where name not like 'Nexus%';
create databases where name matches '^Nexus.*$';
create databases where name not matches '^Nexus.*$';
create databases where name in ('Nexus Operational Database');
create databases where name not in ('Nexus Operational Database');
create databases where solution = project1;
create databases where solution = project222;
create databases where solution != project1;
create databases where solution != project222;
create databases where solution in (project1);
create databases where solution in (project1, project222);
create databases where solution in (project222);
create databases where solution not in (project1);
create databases where solution not in (project222);
create databases where solution not in (project1, project222);
create databases where branch = operational;
create databases where branch != operational;
create databases where branch in (operational);
create databases where branch in (operational, analytical);
create databases where branch not in (operational);
create databases where branch not in (operational, analytical);
create databases where environment = dev;
create databases where environment = qa;
create databases where environment != dev;
create databases where environment != qa;
create databases where environment in (dev, qa);
create databases where environment not in (dev);
create databases where environment not in (qa);
create databases where environment not in (dev, qa);
create databases where server = nexus;
create databases where server != nexus;
create databases where server in (nexus);
create databases where server in (nexus, proxima);
create databases where server not in (nexus);
create databases where server not in (nexus, proxima);
create databases where name not in ('Nexus Operational Database') order by name asc;
create databases order by id asc;
create databases order by id descending;
create databases order by name asc;
create databases order by name descending;
create databases where any tag = 'location_us';
create databases where any tag = 'location_my_desk';
create databases where every tag = 'location_us';
create databases where any tag != 'location_us';
create databases where every tag != 'location_us';
create databases where every tag != 'idiot_village';
create databases where any tag like 'location_my_%';
create databases where any tag like 'location_rdlab%';
create databases where every tag like 'location%';
update nexus_opdb;
create nexus_opdb;
update database nexus_opdb to version 1.0.0;
update database nexus_opdb to version 1.0.1;
create databases where id = proxima_opdb;
create databases where id in (nexus_opdb, proxima_opdb);
create databases;
create nexus_opdb;
update nexus_opdb;
update database nexus_opdb to version 1.0.0;
update databases to version 1.0.0 where id in (nexus_opdb, proxima_opdb);
update databases to version 1.0.0 where solution = iot_app;
select databases where solution = iot_app;
update nexus_opdb to version 1.1.0;
select databases;
update nexus_opdb to version 1.1.0;
update nexus_opdb to version 1.2.0;
update nexus_opdb to version 1.2.0;
revert nexus_opdb to version 1.0.0;
update nexus_opdb to version 1.1.0;
update databases to version 1.2.0;
revert databases to version 1.0.0;
apply configuration config1 to databases where id in (nexus_opdb);
apply configuration config1 to databases where id = nexus_opdb;
